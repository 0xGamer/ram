var stack int vec >> [0]
var i int >> 0
jmp 1

stdfs open >> ./ram/test.txt
split string >> "\n"

// cmp i with length of program
vec str len
ram var i
cmp
jne 2

// print i
print var int i
vec str >> [i]
// call lexer + parser
jmp 3
// increment the loop
ram 1
ram var i
add
ram var i prev
jmp 1

split string >> " "
vec str >> [0]
print vec str
ram lxstring >> ram
// compare for "ram"
str cmp
je 4
ram lxstring >> pop
// compare for "pop"
str cmp
je 5
ram lxstring >> add
// compare for "add"
str cmp
je 6
ram lxstring >> sub
// compare for "sub"
str cmp
je 7

// ram func
printc >> ram function called

// pop func
printc >> pop func called

// add func
printc >> add func called

// sub func
printc >> sub func called